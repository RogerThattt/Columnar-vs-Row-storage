from pyspark.sql import SparkSession
from pyspark.sql.functions import col, from_json
from pyspark.sql.types import StructType, StructField, StringType

spark = SparkSession.builder.appName("OrderFalloutAnalysis").getOrCreate()

# Define schema for incoming JSON data
schema = StructType([
    StructField("order_id", StringType(), True),
    StructField("status", StringType(), True),
    StructField("reason", StringType(), True),
    StructField("timestamp", StringType(), True)
])

# Read streaming data from Kafka
raw_orders = spark \
    .readStream \
    .format("kafka") \
    .option("kafka.bootstrap.servers", "localhost:9092") \
    .option("subscribe", "order_fallout") \
    .load()

# Convert Kafka data to structured DataFrame
order_df = raw_orders.select(from_json(col("value").cast("string"), schema).alias("data")).select("data.*")

# Write the streaming data to Delta Lake
order_df.writeStream \
    .format("delta") \
    .option("checkpointLocation", "/mnt/delta/order_fallout_checkpoint") \
    .option("path", "/mnt/delta/order_fallout") \
    .outputMode("append") \
    .start()
